"""
Django settings for web_app project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
AUTH_USER_MODEL = 'website.Doctor'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-x%7l#o1emu^41r*6bw!84vd@(*_qu9l_pi0-yt)!g=!78euh7x"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
DEBUG_MODE_WITHOUT_ARDUINO = False

ALLOWED_HOSTS = ["*"]

# Modelos e Scalers para Perna Dominante
EMG_DOM_MODEL_PATH = BASE_DIR / "website" / "models_ml" / "emg_model_dominant.h5"
EMG_DOM_MEAN_PATH = BASE_DIR / "website" / "models_ml" / "emg_mean_dominant.joblib"
EMG_DOM_STD_PATH = BASE_DIR / "website" / "models_ml" / "emg_std_dominant.joblib"

# Modelos e Scalers para Perna Não-Dominante
EMG_NDOM_MODEL_PATH = BASE_DIR / "website" / "models_ml" / "emg_model_non_dominant.h5"
EMG_NDOM_MEAN_PATH = BASE_DIR / "website" / "models_ml" / "emg_mean_non_dominant.joblib"
EMG_NDOM_STD_PATH = BASE_DIR / "website" / "models_ml" / "emg_std_non_dominant.joblib"

# Application definition

INSTALLED_APPS = [
    "channels",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "website",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

# Ensure you have the following settings for session management
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'sessionid'

ROOT_URLCONF = "web_app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "web_app.wsgi.application"
ASGI_APPLICATION = 'web_app.asgi.application'


#Channel layer
# settings.py
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'website.backends.DoctorBackend',
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Lisbon"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#STATIC_ROOT = BASE_DIR / "productionfiles"

# static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    # Não inclua STATIC_ROOT ou pastas que serão usadas apenas para coleta aqui.
    # Apenas inclua diretórios onde você mantém seus arquivos estáticos *fonte*.
    # Seu arquivo patient_info.css está em 'website/static/css/',
    # e como 'website' está em INSTALLED_APPS, o AppDirectoriesFinder já o encontrará.
    # Se você tiver outros arquivos estáticos globais na raiz do projeto, adicione:
    # os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = BASE_DIR / "staticfiles_collected" # Use um nome diferente para STATIC_ROOT

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# MQTT 
MQTT_BROKER = 'test.mosquitto.org'
MQTT_PORT = 1883

# Logout 
# Redirect to the homepage after logout
LOGOUT_REDIRECT_URL = '/'
# settings.py

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'django.channels.server': {
            'level': 'DEBUG',
            'handlers': ['console'],
        },
        'channels_redis': {
            'level': 'DEBUG',
            'handlers': ['console'],
        },
        'mqttasgi': {
            'level': 'DEBUG',
            'handlers': ['console'],
        },
    },
}